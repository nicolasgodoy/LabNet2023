@model Lab.MVC.Models.CustomersViewModel


@{
    string action = ViewData["Action"] as string;
    bool isAdd = action == "Add";
    string Title = isAdd ? "Agregar Customer" : "Editar Customer";
    bool isDisabled = isAdd;

    string btnLabel = isAdd ? "Agregar" : "Actualizar";
    ViewBag.@Title = @Title;




}

<h1>Formulario</h1>
<h2>@Title</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@using (Html.BeginForm(action, "Customer", FormMethod.Post))
{

<div class="form-group">
    <div>
        <div>
            <label>Ingrese el CustomID</label>
            @if (isDisabled)
            {
                @Html.TextBoxFor(c => c.Id, htmlAttributes: new { @class = "control-label form-control" })
                @Html.ValidationMessageFor(c => c.Id, "", new { @class = "text-center text-danger" })
            }
            else
            {
                @Html.TextBoxFor(c => c.Id, htmlAttributes: new { @class = "control-label form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(c => c.Id, "", new { @class = "text-center text-danger" })
            }
        </div>
        <div>
            <label>Ingrese el company Name</label>
            @Html.TextBoxFor(c => c.companyName, htmlAttributes: new { @class = "control-label form-control" })
            @Html.ValidationMessageFor(c => c.companyName, "", new { @class = "text-center text-danger" })
        </div>
        <div>
            <label>Ingrese el Contact Name</label>
            @Html.TextBoxFor(c => c.contactName, htmlAttributes: new { @class = "control-label form-control" })
            @Html.ValidationMessageFor(c => c.contactName, "", new { @class = "text-center text-danger" })

        </div>
        @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-danger" })
        <input type="submit" class="btn btn-success" value="@btnLabel" />

    </div>
        </div>
}





